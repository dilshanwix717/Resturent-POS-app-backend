import mongoose from "mongoose";
const { Schema } = mongoose;

const WastageSchema = new Schema({
    // Wastage ID per wastage generated by the system
    wastageId: {
        type: String,
        required: true,
        unique: true,
    },
    // Product ID of the product which is wasted (Finished Goods or Raw Material)
    productId: {
        type: String,
        required: true,
    },
    // Quantity of the product wasted
    quantity: {
        type: Number,
        required: true,
    },
    // Unit of Measurement of the product wasted
    uomId: {
        type: String,
        required: true,
    },
    // Reason for the wastage
    reason: {
        type: String,
        required: true,
    },
    // Condition of the product wasted
    condition: {
        type: String,
        required: true,
        enum: ["Good", "Damaged", "Expired"],
    },
    // Company ID where the wastage is recorded
    companyId: {
        type: String,
        required: true,
    },
    // Shop ID where the wastage is recorded
    shopId: {
        type: String,
        required: true,
    },
    // Date and time of the wastage
    date: {
        type: Date,
        required: true,
    },
    // User ID who recorded the wastage
    userId: {
        type: String,
        required: true,
    },
}, { 
    timestamps: true
});

WastageSchema.pre("save", async function (next) {
    if (this.isNew) {
        const lastWastage = await mongoose.model("Wastage").findOne().sort({ createdAt: -1 });
        const lastWastageID = lastWastage ? parseInt(lastWastage.wastageId.split("-")[1]) : 0;
        this.wastageId = `WastageID-${lastWastageID + 1}`;
    }
    next();
});

// Export the model
export default mongoose.model("Wastage", WastageSchema);

